module synchronizer #(parameter WIDTH=64) (
    input  clk, rst_n, [WIDTH-1:0] d_in,
    output reg [WIDTH-1:0] q_out
);
    reg [WIDTH-1:0] q1;
    always @(posedge clk) begin
        if (!rst_n) begin
            q1   <= 0;
            q_out <= 0;
        end else begin
            q1    <= d_in;   // Stage 1 Flip-Flop
            q_out <= q1;     // Stage 2 Flip-Flop
        end
    end
endmodule
